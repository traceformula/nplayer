//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.22 at 12:39:58 BST 
//


package rpg.jaxb.impl;

public class WeaponListTypeImpl implements rpg.jaxb.WeaponListType, com.sun.xml.bind.JAXBObject, rpg.jaxb.impl.runtime.UnmarshallableObject, rpg.jaxb.impl.runtime.XMLSerializable, rpg.jaxb.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Category;
    public final static java.lang.Class version = (rpg.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (rpg.jaxb.WeaponListType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getCategory() {
        if (_Category == null) {
            _Category = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Category;
    }

    public java.util.List getCategory() {
        return _getCategory();
    }

    public rpg.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context) {
        return new rpg.jaxb.impl.WeaponListTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(rpg.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Category == null)? 0 :_Category.size());
        while (idx1 != len1) {
            context.startElement("rgb.jaxb.character", "Category");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Category.get(idx_0 ++)), "Category");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Category.get(idx_1 ++)), "Category");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Category.get(idx1 ++)), "Category");
            context.endElement();
        }
    }

    public void serializeAttributes(rpg.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Category == null)? 0 :_Category.size());
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(rpg.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Category == null)? 0 :_Category.size());
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (rpg.jaxb.WeaponListType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000$rpg"
+".jaxb.WeaponListType.CategoryTypet\u0000+http://java.sun.com/jaxb"
+"/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.gramm"
+"ar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;"
+"L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003p"
+"psr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.su"
+"n.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.m"
+"sv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datat"
+"ype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btype"
+"Nameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpac"
+"eProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004"
+"typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt"
+"\u0000\bCategoryt\u0000\u0012rgb.jaxb.charactersr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$L"
+"com/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u0010q\u0000~\u0000\"q\u0000~\u0000\fq\u0000"
+"~\u0000\u000fq\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class CategoryTypeImpl implements rpg.jaxb.WeaponListType.CategoryType, com.sun.xml.bind.JAXBObject, rpg.jaxb.impl.runtime.UnmarshallableObject, rpg.jaxb.impl.runtime.XMLSerializable, rpg.jaxb.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _BattleForm;
        protected java.lang.String _Category;
        public final static java.lang.Class version = (rpg.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (rpg.jaxb.WeaponListType.CategoryType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getBattleForm() {
            if (_BattleForm == null) {
                _BattleForm = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _BattleForm;
        }

        public java.util.List getBattleForm() {
            return _getBattleForm();
        }

        public java.lang.String getCategory() {
            return _Category;
        }

        public void setCategory(java.lang.String value) {
            _Category = value;
        }

        public rpg.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context) {
            return new rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(rpg.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_BattleForm == null)? 0 :_BattleForm.size());
            while (idx1 != len1) {
                context.startElement("rgb.jaxb.character", "BattleForm");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _BattleForm.get(idx_0 ++)), "BattleForm");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _BattleForm.get(idx_1 ++)), "BattleForm");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _BattleForm.get(idx1 ++)), "BattleForm");
                context.endElement();
            }
        }

        public void serializeAttributes(rpg.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_BattleForm == null)? 0 :_BattleForm.size());
            context.startAttribute("", "Category");
            try {
                context.text(((java.lang.String) _Category), "Category");
            } catch (java.lang.Exception e) {
                rpg.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(rpg.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_BattleForm == null)? 0 :_BattleForm.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (rpg.jaxb.WeaponListType.CategoryType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun"
+".msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribu"
+"tesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sr\u0000\u001dcom.sun"
+".msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0006sr\u0000\u0011java.lang"
+".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0012\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~"
+"\u0000\u001at\u00003rpg.jaxb.WeaponListType.CategoryType.BattleFormTypet\u0000+h"
+"ttp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000fppsq\u0000~\u0000\u0014q\u0000~\u0000"
+"\u0013psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rel"
+"axng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/"
+"util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"
+"on$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.u"
+"til.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~"
+"\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSche"
+"ma-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\nBattleFormt\u0000\u0012rgb.jaxb.charactersq\u0000~"
+"\u0000\u0014ppsq\u0000~\u0000%q\u0000~\u0000\u0013psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000*q\u0000~\u0000/t\u0000\u0006stringsr\u00005com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00002\u0001q\u0000~"
+"\u00005sq\u0000~\u00006q\u0000~\u0000Bq\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\bCategoryt\u0000\u0000sr\u0000\"com.sun.msv.gramma"
+"r.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramma"
+"r/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expres"
+"sionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006par"
+"entt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0011q\u0000~\u0000#"
+"q\u0000~\u0000\u0005q\u0000~\u0000\rq\u0000~\u0000\u0010q\u0000~\u0000\bx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class BattleFormTypeImpl implements rpg.jaxb.WeaponListType.CategoryType.BattleFormType, com.sun.xml.bind.JAXBObject, rpg.jaxb.impl.runtime.UnmarshallableObject, rpg.jaxb.impl.runtime.XMLSerializable, rpg.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Type;
            protected com.sun.xml.bind.util.ListImpl _Weapon;
            public final static java.lang.Class version = (rpg.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (rpg.jaxb.WeaponListType.CategoryType.BattleFormType.class);
            }

            public java.lang.String getType() {
                return _Type;
            }

            public void setType(java.lang.String value) {
                _Type = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getWeapon() {
                if (_Weapon == null) {
                    _Weapon = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _Weapon;
            }

            public java.util.List getWeapon() {
                return _getWeapon();
            }

            public rpg.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context) {
                return new rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.BattleFormTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(rpg.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx2 = 0;
                final int len2 = ((_Weapon == null)? 0 :_Weapon.size());
                while (idx2 != len2) {
                    if (_Weapon.get(idx2) instanceof javax.xml.bind.Element) {
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Weapon.get(idx2 ++)), "Weapon");
                    } else {
                        context.startElement("rgb.jaxb.character", "Weapon");
                        int idx_0 = idx2;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Weapon.get(idx_0 ++)), "Weapon");
                        context.endNamespaceDecls();
                        int idx_1 = idx2;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Weapon.get(idx_1 ++)), "Weapon");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Weapon.get(idx2 ++)), "Weapon");
                        context.endElement();
                    }
                }
            }

            public void serializeAttributes(rpg.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx2 = 0;
                final int len2 = ((_Weapon == null)? 0 :_Weapon.size());
                context.startAttribute("", "Type");
                try {
                    context.text(((java.lang.String) _Type), "Type");
                } catch (java.lang.Exception e) {
                    rpg.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                while (idx2 != len2) {
                    if (_Weapon.get(idx2) instanceof javax.xml.bind.Element) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Weapon.get(idx2 ++)), "Weapon");
                    } else {
                        idx2 += 1;
                    }
                }
            }

            public void serializeURIs(rpg.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx2 = 0;
                final int len2 = ((_Weapon == null)? 0 :_Weapon.size());
                while (idx2 != len2) {
                    if (_Weapon.get(idx2) instanceof javax.xml.bind.Element) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Weapon.get(idx2 ++)), "Weapon");
                    } else {
                        idx2 += 1;
                    }
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (rpg.jaxb.WeaponListType.CategoryType.BattleFormType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001p"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0006sr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.sun"
+".msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv"
+".grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloc"
+"alNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000\u000frpg."
+"jaxb.Weapont\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000"
+"~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0006q\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0013rpg.jaxb.WeaponTypeq\u0000~\u0000!sq\u0000~\u0000\tppsq\u0000~\u0000\u0013q\u0000~"
+"\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/re"
+"laxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv"
+"/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\f"
+"namespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/ms"
+"v/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/20"
+"01/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Express"
+"ion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv."
+"util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000"
+"~\u0000\u001expq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSch"
+"ema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0006Weapont\u0000\u0012rgb.jaxb.charactersq\u0000~\u0000\u0013p"
+"psq\u0000~\u0000,q\u0000~\u0000\u0012psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00001q\u0000~\u00006t\u0000\u0006stringsr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00009\u0001q\u0000~\u0000<s"
+"q\u0000~\u0000=q\u0000~\u0000Iq\u0000~\u00006sq\u0000~\u0000\u001dt\u0000\u0004Typet\u0000\u0000sr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$L"
+"com/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\t\u0001pq\u0000~\u0000\u0010q\u0000~\u0000&q\u0000~\u0000\u0005q\u0000"
+"~\u0000*q\u0000~\u0000\bq\u0000~\u0000#q\u0000~\u0000\u000fq\u0000~\u0000%q\u0000~\u0000\nx"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends rpg.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------");
                }

                protected Unmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.BattleFormTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                if (("Weapon" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                    _getWeapon().add(((rpg.jaxb.impl.WeaponImpl) spawnChildFromEnterElement((rpg.jaxb.impl.WeaponImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Weapon" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  4 :
                                if (("Name" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                    _getWeapon().add(((rpg.jaxb.impl.WeaponTypeImpl) spawnChildFromEnterElement((rpg.jaxb.impl.WeaponTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  6 :
                                if (("Weapon" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                    _getWeapon().add(((rpg.jaxb.impl.WeaponImpl) spawnChildFromEnterElement((rpg.jaxb.impl.WeaponImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Weapon" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "Type");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  5 :
                                if (("Weapon" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "Type");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                if (("Type" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("Type" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "Type");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  6 :
                                    revertToParentFromText(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "Type");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    break;
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public class Unmarshaller
            extends rpg.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "-------");
            }

            protected Unmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("BattleForm" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            break;
                        case  4 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  6 :
                            if (("BattleForm" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Category");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Category = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  5 :
                            if (("BattleForm" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  4 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Category");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  4 :
                            if (("Type" == ___local)&&("" == ___uri)) {
                                _getBattleForm().add(((rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.BattleFormTypeImpl) spawnChildFromEnterAttribute((rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.BattleFormTypeImpl.class), 5, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            if (("Category" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("Category" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  4 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Category");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  4 :
                                attIdx = context.getAttribute("", "Type");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  1 :
                                eatText1(value);
                                state = 2;
                                return ;
                            case  6 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "Category");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends rpg.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(rpg.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return rpg.jaxb.impl.WeaponListTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Category");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Category" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("Category" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Category" == ___local)&&("rgb.jaxb.character" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "Category");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Category" == ___local)&&("" == ___uri)) {
                            _getCategory().add(((rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl) spawnChildFromEnterAttribute((rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Category");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "Category");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
