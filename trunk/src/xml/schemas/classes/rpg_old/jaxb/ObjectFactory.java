//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.22 at 12:39:58 BST 
//


package rpg.jaxb;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the rpg.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends rpg.jaxb.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(84, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static rpg.jaxb.impl.runtime.GrammarInfo grammarInfo = new rpg.jaxb.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (rpg.jaxb.ObjectFactory.class));
    public final static java.lang.Class version = (rpg.jaxb.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((rpg.jaxb.RaceType.DescriptionType.VisionTypeType.class), "rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.VisionTypeTypeImpl");
        defaultImplementations.put((rpg.jaxb.ProtectiveItemType.ArmorShieldType.WeightType.class), "rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl.WeightTypeImpl");
        defaultImplementations.put((rpg.jaxb.Character.class), "rpg.jaxb.impl.CharacterImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponType.CriticalType.class), "rpg.jaxb.impl.WeaponTypeImpl.CriticalTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponList.class), "rpg.jaxb.impl.WeaponListImpl");
        defaultImplementations.put((rpg.jaxb.GroupType.EntityType.class), "rpg.jaxb.impl.GroupTypeImpl.EntityTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.CompatibleArmorTypeType.ProhibitedMaterialType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.CompatibleArmorTypeTypeImpl.ProhibitedMaterialTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.LevelType.class), "rpg.jaxb.impl.CharacterTypeImpl.LevelTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.CriticalType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.CriticalTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.CompatibleArmorTypeType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.CompatibleArmorTypeTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.LevelType.AbilityType.class), "rpg.jaxb.impl.CharacterTypeImpl.LevelTypeImpl.AbilityTypeImpl");
        defaultImplementations.put((rpg.jaxb.SkillListType.MaxRanksType.class), "rpg.jaxb.impl.SkillListTypeImpl.MaxRanksTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.CombatDataType.ArmorClassType.class), "rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.ArmorClassTypeImpl");
        defaultImplementations.put((rpg.jaxb.AnyType.class), "rpg.jaxb.impl.AnyTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.CombatDataType.class), "rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponListType.CategoryType.BattleFormType.class), "rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.BattleFormTypeImpl");
        defaultImplementations.put((rpg.jaxb.ProtectiveItemType.class), "rpg.jaxb.impl.ProtectiveItemTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.DescriptionType.class), "rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.CombatDataType.InitiativeType.class), "rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.InitiativeTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.DescriptionType.AutomaticLanguagesType.class), "rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.AutomaticLanguagesTypeImpl");
        defaultImplementations.put((rpg.jaxb.Weapon.class), "rpg.jaxb.impl.WeaponImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.AbilityType.class), "rpg.jaxb.impl.CharacterTypeImpl.AbilityTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.InventoryType.class), "rpg.jaxb.impl.CharacterTypeImpl.InventoryTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponListType.CategoryType.class), "rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl");
        defaultImplementations.put((rpg.jaxb.ProtectiveItemType.ArmorShieldType.class), "rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.DescriptionType.RaceSizeType.class), "rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.RaceSizeTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.EquippableWeaponCategoryType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.EquippableWeaponCategoryTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponType.DamageType.MediumType.class), "rpg.jaxb.impl.WeaponTypeImpl.DamageTypeImpl.MediumTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.class), "rpg.jaxb.impl.CharacterTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponType.DamageType.SmallType.class), "rpg.jaxb.impl.WeaponTypeImpl.DamageTypeImpl.SmallTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponType.WeightType.class), "rpg.jaxb.impl.WeaponTypeImpl.WeightTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceListType.class), "rpg.jaxb.impl.RaceListTypeImpl");
        defaultImplementations.put((rpg.jaxb.SkillListType.SkillType.class), "rpg.jaxb.impl.SkillListTypeImpl.SkillTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.InventoryType.UnequippedItemType.class), "rpg.jaxb.impl.CharacterTypeImpl.InventoryTypeImpl.UnequippedItemTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.CombatDataType.InitiativeType.MiscModifierType.class), "rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.InitiativeTypeImpl.MiscModifierTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponType.SpecialPropertiesType.class), "rpg.jaxb.impl.WeaponTypeImpl.SpecialPropertiesTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.DescriptionType.class), "rpg.jaxb.impl.CharacterTypeImpl.DescriptionTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.SelectedFeatsType.class), "rpg.jaxb.impl.CharacterTypeImpl.SelectedFeatsTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.DamageType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.DamageTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponType.DamageType.class), "rpg.jaxb.impl.WeaponTypeImpl.DamageTypeImpl");
        defaultImplementations.put((rpg.jaxb.ProtectiveItem.class), "rpg.jaxb.impl.ProtectiveItemImpl");
        defaultImplementations.put((rpg.jaxb.SkillList.class), "rpg.jaxb.impl.SkillListImpl");
        defaultImplementations.put((rpg.jaxb.SkillListType.SkillType.ClassInfoType.class), "rpg.jaxb.impl.SkillListTypeImpl.SkillTypeImpl.ClassInfoTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponType.class), "rpg.jaxb.impl.WeaponTypeImpl");
        defaultImplementations.put((rpg.jaxb.ProtectiveItemType.ArmorShieldType.SpecialPropertiesType.class), "rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl.SpecialPropertiesTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.InventoryType.EquippedItemType.class), "rpg.jaxb.impl.CharacterTypeImpl.InventoryTypeImpl.EquippedItemTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.LevelType.FeatsSelectedThisLevelType.class), "rpg.jaxb.impl.CharacterTypeImpl.LevelTypeImpl.FeatsSelectedThisLevelTypeImpl");
        defaultImplementations.put((rpg.jaxb.WeaponListType.class), "rpg.jaxb.impl.WeaponListTypeImpl");
        defaultImplementations.put((rpg.jaxb.ProtectiveItemType.ArmorShieldType.SpeedType.class), "rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl.SpeedTypeImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.CombatDataType.AttackBonusType.class), "rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.AttackBonusTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceList.class), "rpg.jaxb.impl.RaceListImpl");
        defaultImplementations.put((rpg.jaxb.CharacterType.SavingThrowType.class), "rpg.jaxb.impl.CharacterTypeImpl.SavingThrowTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.EquippedWeaponType.class), "rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.EquippedWeaponTypeImpl");
        defaultImplementations.put((rpg.jaxb.Group.class), "rpg.jaxb.impl.GroupImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.DescriptionType.AutomaticLanguagesType.LanguageType.class), "rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.AutomaticLanguagesTypeImpl.LanguageTypeImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.class), "rpg.jaxb.impl.RaceTypeImpl");
        defaultImplementations.put((rpg.jaxb.Race.class), "rpg.jaxb.impl.RaceImpl");
        defaultImplementations.put((rpg.jaxb.RaceType.AbilityModifierType.class), "rpg.jaxb.impl.RaceTypeImpl.AbilityModifierTypeImpl");
        defaultImplementations.put((rpg.jaxb.GroupType.class), "rpg.jaxb.impl.GroupTypeImpl");
        defaultImplementations.put((rpg.jaxb.SkillListType.class), "rpg.jaxb.impl.SkillListTypeImpl");
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "SkillList"), (rpg.jaxb.SkillList.class));
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "ProtectiveItem"), (rpg.jaxb.ProtectiveItem.class));
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "RaceList"), (rpg.jaxb.RaceList.class));
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "Race"), (rpg.jaxb.Race.class));
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "Group"), (rpg.jaxb.Group.class));
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "WeaponList"), (rpg.jaxb.WeaponList.class));
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "Weapon"), (rpg.jaxb.Weapon.class));
        rootTagMap.put(new javax.xml.namespace.QName("rgb.jaxb.character", "Character"), (rpg.jaxb.Character.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: rpg.jaxb
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of RaceTypeDescriptionTypeVisionTypeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.DescriptionType.VisionTypeType createRaceTypeDescriptionTypeVisionTypeType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.VisionTypeTypeImpl();
    }

    /**
     * Create an instance of ProtectiveItemTypeArmorShieldTypeWeightType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.ProtectiveItemType.ArmorShieldType.WeightType createProtectiveItemTypeArmorShieldTypeWeightType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl.WeightTypeImpl();
    }

    /**
     * Create an instance of Character
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.Character createCharacter()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType createRaceTypeBodyPartType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl();
    }

    /**
     * Create an instance of WeaponTypeCriticalType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponType.CriticalType createWeaponTypeCriticalType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponTypeImpl.CriticalTypeImpl();
    }

    /**
     * Create an instance of WeaponList
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponList createWeaponList()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponListImpl();
    }

    /**
     * Create an instance of GroupTypeEntityType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.GroupType.EntityType createGroupTypeEntityType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.GroupTypeImpl.EntityTypeImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartTypeCompatibleArmorTypeTypeProhibitedMaterialType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType.CompatibleArmorTypeType.ProhibitedMaterialType createRaceTypeBodyPartTypeCompatibleArmorTypeTypeProhibitedMaterialType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.CompatibleArmorTypeTypeImpl.ProhibitedMaterialTypeImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartTypeNaturalWeaponType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType createRaceTypeBodyPartTypeNaturalWeaponType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeLevelType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.LevelType createCharacterTypeLevelType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.LevelTypeImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartTypeNaturalWeaponTypeCriticalType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.CriticalType createRaceTypeBodyPartTypeNaturalWeaponTypeCriticalType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.CriticalTypeImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartTypeCompatibleArmorTypeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType.CompatibleArmorTypeType createRaceTypeBodyPartTypeCompatibleArmorTypeType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.CompatibleArmorTypeTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeLevelTypeAbilityType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.LevelType.AbilityType createCharacterTypeLevelTypeAbilityType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.LevelTypeImpl.AbilityTypeImpl();
    }

    /**
     * Create an instance of SkillListTypeMaxRanksType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.SkillListType.MaxRanksType createSkillListTypeMaxRanksType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.SkillListTypeImpl.MaxRanksTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeCombatDataTypeArmorClassType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.CombatDataType.ArmorClassType createCharacterTypeCombatDataTypeArmorClassType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.ArmorClassTypeImpl();
    }

    /**
     * Create an instance of AnyType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.AnyType createAnyType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.AnyTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeCombatDataType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.CombatDataType createCharacterTypeCombatDataType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl();
    }

    /**
     * Create an instance of WeaponListTypeCategoryTypeBattleFormType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponListType.CategoryType.BattleFormType createWeaponListTypeCategoryTypeBattleFormType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl.BattleFormTypeImpl();
    }

    /**
     * Create an instance of ProtectiveItemType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.ProtectiveItemType createProtectiveItemType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.ProtectiveItemTypeImpl();
    }

    /**
     * Create an instance of RaceTypeDescriptionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.DescriptionType createRaceTypeDescriptionType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeCombatDataTypeInitiativeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.CombatDataType.InitiativeType createCharacterTypeCombatDataTypeInitiativeType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.InitiativeTypeImpl();
    }

    /**
     * Create an instance of RaceTypeDescriptionTypeAutomaticLanguagesType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.DescriptionType.AutomaticLanguagesType createRaceTypeDescriptionTypeAutomaticLanguagesType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.AutomaticLanguagesTypeImpl();
    }

    /**
     * Create an instance of Weapon
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.Weapon createWeapon()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponImpl();
    }

    /**
     * Create an instance of CharacterTypeAbilityType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.AbilityType createCharacterTypeAbilityType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.AbilityTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeInventoryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.InventoryType createCharacterTypeInventoryType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.InventoryTypeImpl();
    }

    /**
     * Create an instance of WeaponListTypeCategoryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponListType.CategoryType createWeaponListTypeCategoryType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponListTypeImpl.CategoryTypeImpl();
    }

    /**
     * Create an instance of ProtectiveItemTypeArmorShieldType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.ProtectiveItemType.ArmorShieldType createProtectiveItemTypeArmorShieldType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl();
    }

    /**
     * Create an instance of RaceTypeDescriptionTypeRaceSizeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.DescriptionType.RaceSizeType createRaceTypeDescriptionTypeRaceSizeType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.RaceSizeTypeImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartTypeNaturalWeaponTypeEquippableWeaponCategoryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.EquippableWeaponCategoryType createRaceTypeBodyPartTypeNaturalWeaponTypeEquippableWeaponCategoryType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.EquippableWeaponCategoryTypeImpl();
    }

    /**
     * Create an instance of WeaponTypeDamageTypeMediumType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponType.DamageType.MediumType createWeaponTypeDamageTypeMediumType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponTypeImpl.DamageTypeImpl.MediumTypeImpl();
    }

    /**
     * Create an instance of CharacterType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType createCharacterType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl();
    }

    /**
     * Create an instance of WeaponTypeDamageTypeSmallType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponType.DamageType.SmallType createWeaponTypeDamageTypeSmallType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponTypeImpl.DamageTypeImpl.SmallTypeImpl();
    }

    /**
     * Create an instance of WeaponTypeWeightType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponType.WeightType createWeaponTypeWeightType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponTypeImpl.WeightTypeImpl();
    }

    /**
     * Create an instance of RaceListType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceListType createRaceListType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceListTypeImpl();
    }

    /**
     * Create an instance of SkillListTypeSkillType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.SkillListType.SkillType createSkillListTypeSkillType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.SkillListTypeImpl.SkillTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeInventoryTypeUnequippedItemType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.InventoryType.UnequippedItemType createCharacterTypeInventoryTypeUnequippedItemType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.InventoryTypeImpl.UnequippedItemTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeCombatDataTypeInitiativeTypeMiscModifierType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.CombatDataType.InitiativeType.MiscModifierType createCharacterTypeCombatDataTypeInitiativeTypeMiscModifierType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.InitiativeTypeImpl.MiscModifierTypeImpl();
    }

    /**
     * Create an instance of WeaponTypeSpecialPropertiesType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponType.SpecialPropertiesType createWeaponTypeSpecialPropertiesType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponTypeImpl.SpecialPropertiesTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeDescriptionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.DescriptionType createCharacterTypeDescriptionType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.DescriptionTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeSelectedFeatsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.SelectedFeatsType createCharacterTypeSelectedFeatsType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.SelectedFeatsTypeImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartTypeNaturalWeaponTypeDamageType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.DamageType createRaceTypeBodyPartTypeNaturalWeaponTypeDamageType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.DamageTypeImpl();
    }

    /**
     * Create an instance of WeaponTypeDamageType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponType.DamageType createWeaponTypeDamageType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponTypeImpl.DamageTypeImpl();
    }

    /**
     * Create an instance of ProtectiveItem
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.ProtectiveItem createProtectiveItem()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.ProtectiveItemImpl();
    }

    /**
     * Create an instance of SkillList
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.SkillList createSkillList()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.SkillListImpl();
    }

    /**
     * Create an instance of SkillListTypeSkillTypeClassInfoType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.SkillListType.SkillType.ClassInfoType createSkillListTypeSkillTypeClassInfoType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.SkillListTypeImpl.SkillTypeImpl.ClassInfoTypeImpl();
    }

    /**
     * Create an instance of WeaponType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponType createWeaponType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponTypeImpl();
    }

    /**
     * Create an instance of ProtectiveItemTypeArmorShieldTypeSpecialPropertiesType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.ProtectiveItemType.ArmorShieldType.SpecialPropertiesType createProtectiveItemTypeArmorShieldTypeSpecialPropertiesType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl.SpecialPropertiesTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeInventoryTypeEquippedItemType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.InventoryType.EquippedItemType createCharacterTypeInventoryTypeEquippedItemType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.InventoryTypeImpl.EquippedItemTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeLevelTypeFeatsSelectedThisLevelType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.LevelType.FeatsSelectedThisLevelType createCharacterTypeLevelTypeFeatsSelectedThisLevelType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.LevelTypeImpl.FeatsSelectedThisLevelTypeImpl();
    }

    /**
     * Create an instance of WeaponListType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.WeaponListType createWeaponListType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.WeaponListTypeImpl();
    }

    /**
     * Create an instance of ProtectiveItemTypeArmorShieldTypeSpeedType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.ProtectiveItemType.ArmorShieldType.SpeedType createProtectiveItemTypeArmorShieldTypeSpeedType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.ProtectiveItemTypeImpl.ArmorShieldTypeImpl.SpeedTypeImpl();
    }

    /**
     * Create an instance of CharacterTypeCombatDataTypeAttackBonusType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.CombatDataType.AttackBonusType createCharacterTypeCombatDataTypeAttackBonusType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.CombatDataTypeImpl.AttackBonusTypeImpl();
    }

    /**
     * Create an instance of RaceList
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceList createRaceList()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceListImpl();
    }

    /**
     * Create an instance of CharacterTypeSavingThrowType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.CharacterType.SavingThrowType createCharacterTypeSavingThrowType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.CharacterTypeImpl.SavingThrowTypeImpl();
    }

    /**
     * Create an instance of RaceTypeBodyPartTypeNaturalWeaponTypeEquippedWeaponType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.BodyPartType.NaturalWeaponType.EquippedWeaponType createRaceTypeBodyPartTypeNaturalWeaponTypeEquippedWeaponType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.BodyPartTypeImpl.NaturalWeaponTypeImpl.EquippedWeaponTypeImpl();
    }

    /**
     * Create an instance of Group
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.Group createGroup()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.GroupImpl();
    }

    /**
     * Create an instance of RaceTypeDescriptionTypeAutomaticLanguagesTypeLanguageType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.DescriptionType.AutomaticLanguagesType.LanguageType createRaceTypeDescriptionTypeAutomaticLanguagesTypeLanguageType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.DescriptionTypeImpl.AutomaticLanguagesTypeImpl.LanguageTypeImpl();
    }

    /**
     * Create an instance of RaceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType createRaceType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl();
    }

    /**
     * Create an instance of Race
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.Race createRace()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceImpl();
    }

    /**
     * Create an instance of RaceTypeAbilityModifierType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.RaceType.AbilityModifierType createRaceTypeAbilityModifierType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.RaceTypeImpl.AbilityModifierTypeImpl();
    }

    /**
     * Create an instance of GroupType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.GroupType createGroupType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.GroupTypeImpl();
    }

    /**
     * Create an instance of SkillListType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public rpg.jaxb.SkillListType createSkillListType()
        throws javax.xml.bind.JAXBException
    {
        return new rpg.jaxb.impl.SkillListTypeImpl();
    }

}
