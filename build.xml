<project name="GameMaster" default="dist" basedir=".">
    <description>
        "GameMaster", called "nPlayer" on SourceForge, is a tool for dungeon masters (DM) when playing
        role playing games with their group. The tool helps keeping track of various things, such
        as initiative, damage, etc, and can be used to simply generate lots of attacks in order to
        dramatically speed up the time taken up by a DM.
    </description>

    <!-- Import project properties file: -->
    <property file="${basedir}/ant.properties"/>

    <!-- set up the compile dependancies -->
    <path id="classpath.common">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build.classes.dir}"/>
    </target>

    <target name="build" depends="clean, init" description="Compiles the .java files ">
        <!-- Compile the java code from ${src.java.dir} into ${build.classes.dir} -->
        <javac srcdir="${src.java.dir}"
               destdir="${build.classes.dir}"
               source="${source.version}"
               target="${target.version}">
            <classpath refid="classpath.common"/>
        </javac>

        <!-- Copy the images to inside the packages -->
        <mkdir dir="${build.classes.dir}/rpg/v4/client/gui/util/image/images"/>
        <copy todir="${build.classes.dir}/rpg/v4/client/gui/util/image/images">
            <fileset dir="${src.java.dir}/rpg/v4/client/gui/util/image/images" includes="*.png"/>
        </copy>

        <!-- Copy the scrollbar images to inside the packages -->
        <mkdir dir="${build.classes.dir}/rpg/swingx/ui/scrollbar/images"/>
        <copy todir="${build.classes.dir}/rpg/swingx/ui/scrollbar/images">
            <fileset dir="${src.java.dir}/rpg/swingx/ui/scrollbar/images" includes="*.png"/>
        </copy>

        <!-- Copy the properties file to inside the packages -->
        <mkdir dir="${build.classes.dir}/rpg/"/>
        <copy todir="${build.classes.dir}/rpg/">
            <fileset dir="${src.java.dir}/rpg" includes="*.properties"/>
        </copy>
    </target>

    <!-- Creates a distribution, i.e. a .jar file -->
    <target name="dist" depends="build" description="Generate the runnable distribution">

        <mkdir dir="${dist.dir}/contents"/>
        <copy todir="${dist.dir}/contents">
            <fileset dir="${build.classes.dir}"/>
            <fileset dir="${basedir}" includes="log4jConfig.txt"/>
        </copy>

        <!-- Create the distribution directory -->
        <mkdir dir="${dist.dir}/lib"/>
        <!-- Put everything in ${build} into the GameMaster-${DSTAMP}.jar file for execution -->
        <jar jarfile="${dist.dir}/lib/${artifact.name}.jar"
            basedir="${dist.dir}/contents" manifest="${src.dir}/MANIFEST.MF">
            <fileset file="${basedir}/splashScreen.png" /> 
        </jar>

        <copy todir="${dist.dir}/lib">
            <fileset dir="${src.dir}" includes="xml/**"/>
            <fileset file="splashScreen.png"/>
        </copy>

        <mkdir dir="${dist.dir}/lib/lib"/>
        <copy todir="${dist.dir}/lib/lib">
            <fileset dir="${lib.dir}" includes="*.jar"/>
            <fileset dir="${lib.dir}" includes="*.properties"/>
        </copy>
    </target>

    <target name="release" depends="dist" description="Create a zipfile for release">
        <mkdir dir="${release.dir}"/>
        <zip destfile="${release.dir}/${artifact.name}-${DSTAMP}-${TSTAMP}.zip"
             basedir="${dist.dir}/lib"/>
    </target>

    <target name="run-normal" depends="build" description="Runs the GameMaster application as a server">
        <echo message="This is expensive and should be avoided. Run through your IDE instead if possible."
              level="warning"/>
        <java classname="rpg.server.gamemaster.Main"
              fork="true">
            <arg value="-log=./log4jConfig.txt"/>
            <jvmarg value="-splash:images/splashScreen.png"/>
            <classpath>
                <pathelement path="${build.classes.dir}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
            <classpath refid="classpath.common"/>
        </java>
    </target>

    <target name="runnable" depends="dist" description="Creates a directory from which GameMaster is runnable">
        <mkdir dir="${dist.runnable.dir}/lib"/>
        <copy todir="${dist.runnable.dir}/lib">
            <fileset dir="${lib.dir}"/>
            <fileset dir="${dist.dir}/lib"/>
        </copy>

        <mkdir dir="${dist.runnable.xml.data.dir}"/>
        <copy todir="${dist.runnable.xml.data.dir}">
            <fileset dir="${src.xml.data.dir}"/>
        </copy>

        <mkdir dir="${dist.runnable.images.dir}"/>
        <copy todir="${dist.runnable.images.dir}">
            <fileset dir="${src.images.dir}"/>
        </copy>

        <copy todir="${dist.runnable.dir}">
            <fileset dir="${src.runner.dir}"/>
        </copy>
    </target>

    <!--  =================================================================== -->
    <!--  Remove everything                                                   -->
    <!--  =================================================================== -->
    <target name="clean" description="Remove (i.e. permanently delete) the build and dist dirs.">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${docs.dir}"/>
        <!--delete dir="${release.dir}"/-->
    </target>

    <!--  =================================================================== -->
    <!--  Build javadoc                                                       -->
    <!--  =================================================================== -->
    <target name="javadoc" description="Generate JavaDoc pages for sourcecode">
        <mkdir dir="${docs.javadoc.dir}"/>
        <javadoc packagenames="${project.packages}"
                 sourcepath="${src.java.dir}"
                 destdir="${docs.javadoc.dir}"
                 author="true"
                 version="true"
                 windowtitle="${project.name} v${project.version} Docs"
                 doctitle="${project.name} version ${project.version}"
                 bottom="Copyright &#169; ${project.year} Sven-Ivar Fjeld. All Rights Reserved.">
            <classpath refid="classpath.common"/>
        </javadoc>
    </target>

    <target name="xsdGeneration" description="">

        <exec dir="${src.xml.schema.dir}" executable="cmd.exe" os="Windows XP" output="xsdOutput.txt">
            <arg line="/c '${src.xml.schema.dir}/generateXSDClasses.bat'"/>
        </exec>

        <replaceregexp match=".*Generated on.*\n"
                       replace="">
            <fileset dir="${src.java.dir}/rpg/v4/middleware/jaxb"/>
        </replaceregexp>

        <replaceregexp match="package rpg.v4.middleware.jaxb."
                       replace="package rpg.v4.middleware.jaxb; import java.io.Serializable;"
                       flags="g">
            <fileset dir="${src.java.dir}/rpg/v4/middleware/jaxb">
                <include name="V4Modifier.java"/>
                <include name="V4Class.java"/>
                <include name="V4Race.java"/>
                <include name="V4State.java"/>
                <include name="V4Weapon.java"/>
                <include name="V4Item.java"/>
                <include name="V4BodyPart.java"/>
                <include name="V4Function.java"/>
                <include name="V4ItemCapsule.java"/>
                <include name="V4ModifierList.java"/>
                <include name="V4ModifierTypeList.java"/>
                <include name="V4GenericAction.java"/>
            </fileset>
        </replaceregexp>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Weapon.java" match="(class V4Weapon)"
                       replace="\1 implements Serializable" flags="g"/>
        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Weapon.java" match="(class Properties)"
                       replace="\1 implements Serializable" flags="g"/>
        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Weapon.java" match="(class Damage)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Item.java" match="(class V4Item)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Race.java" match="(class V4Race)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Class.java" match="(class V4Class)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Modifier.java" match="(class V4Modifier)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4ItemCapsule.java" match="(class V4ItemCapsule)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4ModifierList.java" match="(class V4ModifierList)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4ModifierTypeList.java" match="(class V4ModifierTypeList)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4State.java" match="(class V4State)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4Function.java" match="(class V4Function)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4BodyPart.java" match="(class V4BodyPart)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4BodyPart.java" match="(class CompatibleItem)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4GenericAction.java" match="(class V4GenericAction)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4GenericAction.java" match="(class HitModifiers)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4GenericAction.java" match="(class MissModifiers)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4GenericAction.java" match="(class Requirements)"
                       replace="\1 implements Serializable" flags="g"/>

        <replaceregexp file="${src.java.dir}/rpg/v4/middleware/jaxb/V4GenericAction.java" match="(class Attack)"
                       replace="\1 implements Serializable" flags="g"/>

    </target>

    <!--  =================================================================== -->
    <!--  Build docs                                                          -->
    <!--  =================================================================== -->
    <target name="docs" description="Generate status documentation for project">
        <mkdir dir="${docs.status.dir}"/>
        <copy file="CHANGELOG.txt" todir="${docs.status.dir}"/>
        <copy file="NEWS.txt" todir="${docs.status.dir}"/>
        <copy file="BUGS.txt" todir="${docs.status.dir}"/>
        <copy file="TODO.txt" todir="${docs.status.dir}"/>
    </target>

    <!--  =================================================================== -->
    <!--  Build all docs (JavaDoc and status docs                             -->
    <!--  =================================================================== -->
    <target name="alldocs" depends="docs, javadoc" description="generate all docs"></target>

    <!--  =================================================================== -->
    <!--  Help on usage                                                       -->
    <!--  =================================================================== -->
    <target name="usage">
        <echo message=""/>
        <echo message=""/>
        <echo message="${project.name} build file"/>
        <echo message="-------------------------------------------------------------"/>
        <echo message=""/>
        <echo message="Available DEVELOPMENT targets are:"/>
        <echo message=""/>
        <echo message="compile --> compiles the source code (default)"/>
        <echo message="dist --> builds a runnable release distribution "/>
        <echo message="clean --> cleans up build, dist and doc directories"/>
        <echo message="webapp --> compiles the web application sourcecode (non .java specific) "/>
        <echo message="war --> builds a WAR file for server deployment "/>
        <echo message="-------------------------------------------------------------"/>
        <echo message="Available DOCUMENTATION targets are:"/>
        <echo message=""/>
        <echo message="alldocs --> builds all documentation"/>
        <echo message="docs --> builds the html documentation "/>
        <echo message="javadoc --> builds the javadoc documentation "/>
        <echo message=""/>
        <echo message="-------------------------------------------------------------"/>
        <echo message=""/>
    </target>

</project>